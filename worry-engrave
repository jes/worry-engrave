#!/usr/bin/perl

use strict;
use warnings;

use FindBin;
use lib "$FindBin::Bin/lib";

use WorryEngrave::CNC;
use WorryEngrave::Text;

use Getopt::Long;
use Term::Screen;

my $dryrun;

GetOptions(
    'dry-run' => \$dryrun,
    'help' => sub { usage(0) },
    'usage' => sub { usage(0) },
) or usage(1);

connect_to_router();

my $scr = Term::Screen->new or die "can't get Term::Screen\n";

my ($curx,$cury,$curz) = (0,0,0);
my $step = 10;
my $lastch = 0;
my $text = 'HOPE';

my $safez = 20;
my $safex = 0;
my $safey = 200;
my $fastfeed = 1000;

while (1) {
    draw();
    my $ch = $scr->getch;
    $lastch = $ch;
    if ($ch eq '0') { # zero one of the axes
        draw();
        $ch = $scr->getch;
        $curx = 0 if $ch eq 'x';
        $cury = 0 if $ch eq 'y';
        $curz = 0 if $ch eq 'z';
        WorryEngrave::CNC->send("G92 X$curx Y$cury Z$curz");
    }
    if ($ch eq 'q') { # quit
        $scr->clrscr;
        exit(0);
    }
    if ($ch eq '+') { # increase step size
        $step = $step*10;
    }
    if ($ch eq '-') { # decrease step size
        $step = $step/10;
    }
    if ($ch =~ /^k[lrud]$/) { # arrow key: move x or y
        $curx -= $step if $ch =~ /l/;
        $curx += $step if $ch =~ /r/;
        $cury -= $step if $ch =~ /d/;
        $cury += $step if $ch =~ /u/;
        WorryEngrave::CNC->send("G0 X$curx Y$cury Z$curz");
    }
    if ($ch =~ /^pg(up|dn)$/) { # move z
        $curz -= $step if $ch =~ /dn/;
        $curz += $step if $ch =~ /up/;
        WorryEngrave::CNC->send("G0 X$curx Y$cury Z$curz");
    }
    if ($ch eq 'e') { # engrave text
        ready();
        check_spindle();
        engrave($text);
        unready();
    }
    if ($ch eq 'c') { # change text
        $text = input(8, $text, "New text");
    }
    if ($ch eq 'h') { # help
        help();
    }
    if ($ch eq 'p') { # probe
        probez();
    }
}

sub input {
    my ($line, $cur, $prompt) = @_;

    $scr->at($line, 0);
    $scr->clreol;
    $scr->at($line, 2);
    $scr->puts("$prompt: ");

    my $new = '';

    while (1) {
        my $ch = $scr->getch;
        last if $ch eq "\r"; # enter
        return $cur if ord($ch) == 7; # escape
        $new .= $ch;
    }

    return $new;
}

sub draw {
    $scr->clrscr;
    $scr->at(0, 2);
    $scr->puts("--- WORRY ENGRAVE by jes ---");

    $scr->at(2, 2);
    $scr->puts("X:");
    $scr->bold->puts(sprintf("%7.2f",$curx))->normal;
    $scr->puts(" [0 X] [left] [right]");

    $scr->at(3, 2);
    $scr->puts("Y:");
    $scr->bold->puts(sprintf("%7.2f",$cury))->normal;
    $scr->puts(" [0 Y] [up] [down]");

    $scr->at(4, 2);
    $scr->puts("Z:");
    $scr->bold->puts(sprintf("%7.2f",$curz))->normal;
    $scr->puts(" [0 Z] [PgUp] [PgDn] [P]robe");

    $scr->at(6, 2);
    $scr->puts("Step: ");
    $scr->bold->puts(sprintf("%g",$step))->normal;
    $scr->puts(" [+] [-]");

    $scr->at(8, 2);
    $scr->puts("Text: ");
    $scr->bold->puts($text)->normal;
    $scr->puts(" [E]ngrave [C]hange");

    $scr->at(10, 2);
    $scr->puts("[Q]uit [H]elp");

    $scr->at(12,2);
    $scr->puts(sprintf("DEBUG KEY: '%s' %d", $lastch, ord($lastch)));
}

sub ready {
    WorryEngrave::CNC->send("M3 S24000");
    WorryEngrave::CNC->send("G1 Z$safez F$fastfeed");
    WorryEngrave::CNC->send("G0 X0 Y0 F$fastfeed");
}

sub check_spindle {
    $scr->at(8, 2);
    $scr->clreol;
    $scr->puts("Is the spindle spinning up? [Y]es [N]o");

    while (1) {
        my $ch = $scr->getch;
        last if $ch eq 'y';
        if ($ch eq 'n') {
            $scr->at(8, 2);
            $scr->clreol;
            $scr->puts("Switch to PC mode and press green button. Is the spindle spinning up? [Y]es [N]o");
        }
    }
}

sub engrave {
    my ($text) = @_;

    my $gcode = WorryEngrave::Text->mkgcode($text,
        centrex => 0,
        centrey => 0,
        diameter => 18,
    );

    my @lines = split /\n/, $gcode;
    my $n = 0;

    # wait for spindle to spin up
    for (1..11) {
        $scr->at(8, 2);
        $scr->clreol;
        $scr->puts("Engraving $text: 0.0% [hit any key to abort]");
        return if $scr->key_pressed; # abort on any keypress
        sleep(1);
    };

    for my $i (0 .. $#lines) {
        my $l = $lines[$i];
        my $pct = sprintf("%.1f", 100 * $i / @lines);

        $scr->at(8, 2);
        $scr->clreol;
        $scr->puts("Engraving $text: $pct% [hit any key to abort]");

        return if $scr->key_pressed; # abort on any keypress

        WorryEngrave::CNC->send($l);
    }
}

sub unready {
    WorryEngrave::CNC->send("M5 S0");
    WorryEngrave::CNC->send("G1 Z$safez F$fastfeed");
    WorryEngrave::CNC->send("G0 X$safex Y$safey F$fastfeed");
}

sub help {
    $scr->clrscr;
    $scr->at(0, 2);
    $scr->puts("--- WORRY ENGRAVE by jes ---");

    my @help = (
        "  SETUP",
        "1. Turn the CNC machine on.",
        "2. Use [PgUp]/[PgDn] to position tool above jig.",
        "3. Use arrow keys to jog tool to platform.",
        "4. Use [+]/[-] to adjust step size and jog tool to exact centre using arrow keys.",
        "5. Use [0 X] and [0 Y] to zero the X and Y coordinates.",
        "6. Place probe tool next to jig, plug it in, clip to tool.",
        "7. Use arrow keys to jog tool to probe puck.",
        "8. Use [P] to probe Z height.",
        "9. Remove the probe puck.",
        "",
        "  ENGRAVING",
        "1. Use [C] to set the text.",
        "2. Place a blank pendant on the platform.",
        "3. Making sure it is pushed home, tighten the clamp.",
        "4. Use [E] to engrave the text on the first side.",
        "5. Loosen the clamp, rotate the pendant around the Y axis, reclamp.",
        "6. Use [E] to engrave the text on the second side.",
        "7. Loosen the clamp and remove the pendant.",
        "",
        "[hit any key to go back]",
    );

    my $line = 2;
    for my $l (@help) {
        $scr->at($line++, 2);
        $scr->puts($l);
    }

    $scr->getch;
}

sub probez {
    # probe Z, add 11.8 or whatever
    # ask the user to remove the probe tool
    # return to safex/safey/safez once they confirm
}

# this runs before Term::Screen is set up
sub connect_to_router {
    print "Connecting...\n";

    if ($dryrun) {
        WorryEngrave::CNC->dryrun;
    } else {
        WorryEngrave::CNC->connect("/dev/ttyACM0")
            or WorryEngrave::CNC->connect("/dev/ttyACM1")
                or die "can't connect";
    }

    print "OK\n";
}

sub usage {
    my ($rc) = @_;

    print "usage: worry-engrave [--dry-run]\n";

    exit($rc);
}
